==============================================================================
                                                           *quick-kanban-nvim*

A plugin for quickly managing your project tasks in a kanban board.

All the data is stored as files inside a project folder as text/markdown 
files. Metadata is stored as JSON.

Author: Jussi Kallio <jkallio+quick-kanban@gmail.com>

==============================================================================
CONTENTS                                                   *quick-kanban.nvim*

    1. Introduction .................... |quick-kanban-introduction|
    2. Setup ........................... |quick-kanban-setup|
    3. Mappings ........................ |quick-kanban-mappings|
    4. Edit Mode ....................... |quick-kanban-edit-mode|
    5. Contributing .................... |quick-kanban-contrib|
    6. License ......................... |quick-kanban-license|

==============================================================================
1. Introduction                                    *quick-kanban-introduction*

This plugin was built to help manage project tasks in a kanban board quickly
without having to leave the editor. It is not meant to replace a full-featured
project management tool, and is best suited for small projects for personal
use or small teams.

    Simple and intuitive interface.
    File based task management.
    Customizable Kanban boards.
    Customizable keybindings.
    Item archiving (for helping to keep the board clean).
    Quickly add, move, and delete tasks.
    Preview markdown files in a floating window.
    Edit markdown files directly in Kanban UI.

This plugin requires neovim 0.6 or higher. Since this plugin is mainly written
in lua, it will not work with vim.

==============================================================================
2. Setup                                                  *quick-kanban-setup*

Setup is done using Lua. To initialize the plugin with all of its defaults,
just call the setup function in your init.vim:

  Example: >
    require'quick-kanban'.setup()
<
Alternatively, you can pass a table of options to the setup function to
customize the default style and behavior.

==============================================================================
3. Mappings                                            *quick-kanban-mappings*

The following mappings are defined by default:

    q               Quit the Kanban board.
    o               Open the markdown file of the item under the cursor.
    e               Edit the markdown file of the item under the cursor.
    a               Add a new item into the kanban board.
    h               Move to previous category
    j               Move to next item in the cateogry
    k               Move to previous item in the category
    l               Move to next category

Mappings can be changed by passing the `keymaps` table in `setup` function.
table, with commands as keys, and the desired mappings as values.

To ensure better user experience, the following keymaps have been disabled
(or remapped) in the Kanban UI windows.
    [a, c, d, i, o, p, r, x, g, G, <esc>, <tab>, <cr>, <bs>]

The exception is the |quick-kanban-edit-mode| where the only remapped
shortcut is by default <esc><esc> to exit the edit mode. This can be
changed by passing the `edit_mode_keymaps` table in `setup` function.

==============================================================================
4. Edit Mode                                          *quick-kanban-edit-mode*

Edit mode is a special mode that allows you to edit the markdown file of an
item directly in the Kanban UI. To enter edit mode, press `e` while the cursor
is on the item you want to edit. This will switch the window focus into the
preview window, and allow you to edit the markdown file.

To exit edit mode, press <esc><esc>. This will save the changes to the file
and return the focus back to the Kanban UI.

You can also edit the markdown file by pressing `o` in the Kanban UI. This
will open the markdown file in a new buffer, and you can edit it there like
any other file in Neovim.

==============================================================================
5. Contributing                                         *quick-kanban-contrib*

If you would like to contribute to the project, please open an issue or a PR:

https://github.com/jkallio/quick-kanban.nvim

==============================================================================
6. License                                              *quick-kanban-license*

MIT License

vim:tw=78:ts=2:et:sts=2:sw=2:ft=help
